#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Qldasv")]
	public partial class QldaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBaihoc(Baihoc instance);
    partial void UpdateBaihoc(Baihoc instance);
    partial void DeleteBaihoc(Baihoc instance);
    partial void InsertVideo_baihoc(Video_baihoc instance);
    partial void UpdateVideo_baihoc(Video_baihoc instance);
    partial void DeleteVideo_baihoc(Video_baihoc instance);
    partial void InsertBaoCao(BaoCao instance);
    partial void UpdateBaoCao(BaoCao instance);
    partial void DeleteBaoCao(BaoCao instance);
    partial void InsertCauhoi(Cauhoi instance);
    partial void UpdateCauhoi(Cauhoi instance);
    partial void DeleteCauhoi(Cauhoi instance);
    partial void InsertGiangvien(Giangvien instance);
    partial void UpdateGiangvien(Giangvien instance);
    partial void DeleteGiangvien(Giangvien instance);
    partial void InsertKhoa(Khoa instance);
    partial void UpdateKhoa(Khoa instance);
    partial void DeleteKhoa(Khoa instance);
    partial void InsertKhoaHoc(KhoaHoc instance);
    partial void UpdateKhoaHoc(KhoaHoc instance);
    partial void DeleteKhoaHoc(KhoaHoc instance);
    partial void InsertLoai(Loai instance);
    partial void UpdateLoai(Loai instance);
    partial void DeleteLoai(Loai instance);
    partial void InsertLop(Lop instance);
    partial void UpdateLop(Lop instance);
    partial void DeleteLop(Lop instance);
    partial void InsertMon(Mon instance);
    partial void UpdateMon(Mon instance);
    partial void DeleteMon(Mon instance);
    partial void InsertSinhVien(SinhVien instance);
    partial void UpdateSinhVien(SinhVien instance);
    partial void DeleteSinhVien(SinhVien instance);
    partial void InsertSV_KH(SV_KH instance);
    partial void UpdateSV_KH(SV_KH instance);
    partial void DeleteSV_KH(SV_KH instance);
    partial void InsertTest(Test instance);
    partial void UpdateTest(Test instance);
    partial void DeleteTest(Test instance);
    #endregion
		
		public QldaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QldasvConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QldaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QldaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QldaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QldaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Baihoc> Baihocs
		{
			get
			{
				return this.GetTable<Baihoc>();
			}
		}
		
		public System.Data.Linq.Table<Video_baihoc> Video_baihocs
		{
			get
			{
				return this.GetTable<Video_baihoc>();
			}
		}
		
		public System.Data.Linq.Table<BaoCao> BaoCaos
		{
			get
			{
				return this.GetTable<BaoCao>();
			}
		}
		
		public System.Data.Linq.Table<Cauhoi> Cauhois
		{
			get
			{
				return this.GetTable<Cauhoi>();
			}
		}
		
		public System.Data.Linq.Table<Giangvien> Giangviens
		{
			get
			{
				return this.GetTable<Giangvien>();
			}
		}
		
		public System.Data.Linq.Table<Khoa> Khoas
		{
			get
			{
				return this.GetTable<Khoa>();
			}
		}
		
		public System.Data.Linq.Table<KhoaHoc> KhoaHocs
		{
			get
			{
				return this.GetTable<KhoaHoc>();
			}
		}
		
		public System.Data.Linq.Table<Loai> Loais
		{
			get
			{
				return this.GetTable<Loai>();
			}
		}
		
		public System.Data.Linq.Table<Lop> Lops
		{
			get
			{
				return this.GetTable<Lop>();
			}
		}
		
		public System.Data.Linq.Table<Mon> Mons
		{
			get
			{
				return this.GetTable<Mon>();
			}
		}
		
		public System.Data.Linq.Table<SinhVien> SinhViens
		{
			get
			{
				return this.GetTable<SinhVien>();
			}
		}
		
		public System.Data.Linq.Table<SV_KH> SV_KHs
		{
			get
			{
				return this.GetTable<SV_KH>();
			}
		}
		
		public System.Data.Linq.Table<Test> Tests
		{
			get
			{
				return this.GetTable<Test>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Baihoc")]
	public partial class Baihoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Mabaihoc;
		
		private string _TenBaihoc;
		
		private System.Nullable<System.DateTime> _Ngaydang;
		
		private string _Makhoahoc;
		
		private EntitySet<Video_baihoc> _Video_baihocs;
		
		private EntityRef<KhoaHoc> _KhoaHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMabaihocChanging(string value);
    partial void OnMabaihocChanged();
    partial void OnTenBaihocChanging(string value);
    partial void OnTenBaihocChanged();
    partial void OnNgaydangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaydangChanged();
    partial void OnMakhoahocChanging(string value);
    partial void OnMakhoahocChanged();
    #endregion
		
		public Baihoc()
		{
			this._Video_baihocs = new EntitySet<Video_baihoc>(new Action<Video_baihoc>(this.attach_Video_baihocs), new Action<Video_baihoc>(this.detach_Video_baihocs));
			this._KhoaHoc = default(EntityRef<KhoaHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mabaihoc", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Mabaihoc
		{
			get
			{
				return this._Mabaihoc;
			}
			set
			{
				if ((this._Mabaihoc != value))
				{
					this.OnMabaihocChanging(value);
					this.SendPropertyChanging();
					this._Mabaihoc = value;
					this.SendPropertyChanged("Mabaihoc");
					this.OnMabaihocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBaihoc", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenBaihoc
		{
			get
			{
				return this._TenBaihoc;
			}
			set
			{
				if ((this._TenBaihoc != value))
				{
					this.OnTenBaihocChanging(value);
					this.SendPropertyChanging();
					this._TenBaihoc = value;
					this.SendPropertyChanged("TenBaihoc");
					this.OnTenBaihocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaydang", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaydang
		{
			get
			{
				return this._Ngaydang;
			}
			set
			{
				if ((this._Ngaydang != value))
				{
					this.OnNgaydangChanging(value);
					this.SendPropertyChanging();
					this._Ngaydang = value;
					this.SendPropertyChanged("Ngaydang");
					this.OnNgaydangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Makhoahoc", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Makhoahoc
		{
			get
			{
				return this._Makhoahoc;
			}
			set
			{
				if ((this._Makhoahoc != value))
				{
					if (this._KhoaHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMakhoahocChanging(value);
					this.SendPropertyChanging();
					this._Makhoahoc = value;
					this.SendPropertyChanged("Makhoahoc");
					this.OnMakhoahocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Baihoc_Video_baihoc", Storage="_Video_baihocs", ThisKey="Mabaihoc", OtherKey="Mabaihoc")]
		public EntitySet<Video_baihoc> Video_baihocs
		{
			get
			{
				return this._Video_baihocs;
			}
			set
			{
				this._Video_baihocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoaHoc_Baihoc", Storage="_KhoaHoc", ThisKey="Makhoahoc", OtherKey="Makhoahoc", IsForeignKey=true)]
		public KhoaHoc KhoaHoc
		{
			get
			{
				return this._KhoaHoc.Entity;
			}
			set
			{
				KhoaHoc previousValue = this._KhoaHoc.Entity;
				if (((previousValue != value) 
							|| (this._KhoaHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhoaHoc.Entity = null;
						previousValue.Baihocs.Remove(this);
					}
					this._KhoaHoc.Entity = value;
					if ((value != null))
					{
						value.Baihocs.Add(this);
						this._Makhoahoc = value.Makhoahoc;
					}
					else
					{
						this._Makhoahoc = default(string);
					}
					this.SendPropertyChanged("KhoaHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Video_baihocs(Video_baihoc entity)
		{
			this.SendPropertyChanging();
			entity.Baihoc = this;
		}
		
		private void detach_Video_baihocs(Video_baihoc entity)
		{
			this.SendPropertyChanging();
			entity.Baihoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Video_baihoc")]
	public partial class Video_baihoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Mavideo;
		
		private string _Tenvideo;
		
		private string _linkvideo;
		
		private string _Mabaihoc;
		
		private EntityRef<Baihoc> _Baihoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMavideoChanging(int value);
    partial void OnMavideoChanged();
    partial void OnTenvideoChanging(string value);
    partial void OnTenvideoChanged();
    partial void OnlinkvideoChanging(string value);
    partial void OnlinkvideoChanged();
    partial void OnMabaihocChanging(string value);
    partial void OnMabaihocChanged();
    #endregion
		
		public Video_baihoc()
		{
			this._Baihoc = default(EntityRef<Baihoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mavideo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Mavideo
		{
			get
			{
				return this._Mavideo;
			}
			set
			{
				if ((this._Mavideo != value))
				{
					this.OnMavideoChanging(value);
					this.SendPropertyChanging();
					this._Mavideo = value;
					this.SendPropertyChanged("Mavideo");
					this.OnMavideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenvideo", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Tenvideo
		{
			get
			{
				return this._Tenvideo;
			}
			set
			{
				if ((this._Tenvideo != value))
				{
					this.OnTenvideoChanging(value);
					this.SendPropertyChanging();
					this._Tenvideo = value;
					this.SendPropertyChanged("Tenvideo");
					this.OnTenvideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkvideo", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string linkvideo
		{
			get
			{
				return this._linkvideo;
			}
			set
			{
				if ((this._linkvideo != value))
				{
					this.OnlinkvideoChanging(value);
					this.SendPropertyChanging();
					this._linkvideo = value;
					this.SendPropertyChanged("linkvideo");
					this.OnlinkvideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mabaihoc", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Mabaihoc
		{
			get
			{
				return this._Mabaihoc;
			}
			set
			{
				if ((this._Mabaihoc != value))
				{
					if (this._Baihoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMabaihocChanging(value);
					this.SendPropertyChanging();
					this._Mabaihoc = value;
					this.SendPropertyChanged("Mabaihoc");
					this.OnMabaihocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Baihoc_Video_baihoc", Storage="_Baihoc", ThisKey="Mabaihoc", OtherKey="Mabaihoc", IsForeignKey=true)]
		public Baihoc Baihoc
		{
			get
			{
				return this._Baihoc.Entity;
			}
			set
			{
				Baihoc previousValue = this._Baihoc.Entity;
				if (((previousValue != value) 
							|| (this._Baihoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Baihoc.Entity = null;
						previousValue.Video_baihocs.Remove(this);
					}
					this._Baihoc.Entity = value;
					if ((value != null))
					{
						value.Video_baihocs.Add(this);
						this._Mabaihoc = value.Mabaihoc;
					}
					else
					{
						this._Mabaihoc = default(string);
					}
					this.SendPropertyChanged("Baihoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaoCao")]
	public partial class BaoCao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Masv;
		
		private string _MaMon;
		
		private string _Magv;
		
		private string _Noidung;
		
		private string _linkdemo;
		
		private string _filedemo;
		
		private EntityRef<Giangvien> _Giangvien;
		
		private EntityRef<Mon> _Mon;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMasvChanging(string value);
    partial void OnMasvChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnMagvChanging(string value);
    partial void OnMagvChanged();
    partial void OnNoidungChanging(string value);
    partial void OnNoidungChanged();
    partial void OnlinkdemoChanging(string value);
    partial void OnlinkdemoChanged();
    partial void OnfiledemoChanging(string value);
    partial void OnfiledemoChanged();
    #endregion
		
		public BaoCao()
		{
			this._Giangvien = default(EntityRef<Giangvien>);
			this._Mon = default(EntityRef<Mon>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Masv", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Masv
		{
			get
			{
				return this._Masv;
			}
			set
			{
				if ((this._Masv != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasvChanging(value);
					this.SendPropertyChanging();
					this._Masv = value;
					this.SendPropertyChanged("Masv");
					this.OnMasvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._Mon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Magv", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Magv
		{
			get
			{
				return this._Magv;
			}
			set
			{
				if ((this._Magv != value))
				{
					if (this._Giangvien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMagvChanging(value);
					this.SendPropertyChanging();
					this._Magv = value;
					this.SendPropertyChanged("Magv");
					this.OnMagvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Noidung", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Noidung
		{
			get
			{
				return this._Noidung;
			}
			set
			{
				if ((this._Noidung != value))
				{
					this.OnNoidungChanging(value);
					this.SendPropertyChanging();
					this._Noidung = value;
					this.SendPropertyChanged("Noidung");
					this.OnNoidungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkdemo", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string linkdemo
		{
			get
			{
				return this._linkdemo;
			}
			set
			{
				if ((this._linkdemo != value))
				{
					this.OnlinkdemoChanging(value);
					this.SendPropertyChanging();
					this._linkdemo = value;
					this.SendPropertyChanged("linkdemo");
					this.OnlinkdemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filedemo", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string filedemo
		{
			get
			{
				return this._filedemo;
			}
			set
			{
				if ((this._filedemo != value))
				{
					this.OnfiledemoChanging(value);
					this.SendPropertyChanging();
					this._filedemo = value;
					this.SendPropertyChanged("filedemo");
					this.OnfiledemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Giangvien_BaoCao", Storage="_Giangvien", ThisKey="Magv", OtherKey="Magv", IsForeignKey=true)]
		public Giangvien Giangvien
		{
			get
			{
				return this._Giangvien.Entity;
			}
			set
			{
				Giangvien previousValue = this._Giangvien.Entity;
				if (((previousValue != value) 
							|| (this._Giangvien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Giangvien.Entity = null;
						previousValue.BaoCaos.Remove(this);
					}
					this._Giangvien.Entity = value;
					if ((value != null))
					{
						value.BaoCaos.Add(this);
						this._Magv = value.Magv;
					}
					else
					{
						this._Magv = default(string);
					}
					this.SendPropertyChanged("Giangvien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mon_BaoCao", Storage="_Mon", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public Mon Mon
		{
			get
			{
				return this._Mon.Entity;
			}
			set
			{
				Mon previousValue = this._Mon.Entity;
				if (((previousValue != value) 
							|| (this._Mon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mon.Entity = null;
						previousValue.BaoCaos.Remove(this);
					}
					this._Mon.Entity = value;
					if ((value != null))
					{
						value.BaoCaos.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("Mon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_BaoCao", Storage="_SinhVien", ThisKey="Masv", OtherKey="Masv", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.BaoCaos.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.BaoCaos.Add(this);
						this._Masv = value.Masv;
					}
					else
					{
						this._Masv = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cauhoi")]
	public partial class Cauhoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCauhoi;
		
		private string _TenCauhoi;
		
		private System.Nullable<int> _Matest;
		
		private string _CauA;
		
		private string _CauB;
		
		private string _CauC;
		
		private string _CauD;
		
		private string _Traloi;
		
		private EntityRef<Test> _Test;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCauhoiChanging(int value);
    partial void OnMaCauhoiChanged();
    partial void OnTenCauhoiChanging(string value);
    partial void OnTenCauhoiChanged();
    partial void OnMatestChanging(System.Nullable<int> value);
    partial void OnMatestChanged();
    partial void OnCauAChanging(string value);
    partial void OnCauAChanged();
    partial void OnCauBChanging(string value);
    partial void OnCauBChanged();
    partial void OnCauCChanging(string value);
    partial void OnCauCChanged();
    partial void OnCauDChanging(string value);
    partial void OnCauDChanged();
    partial void OnTraloiChanging(string value);
    partial void OnTraloiChanged();
    #endregion
		
		public Cauhoi()
		{
			this._Test = default(EntityRef<Test>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauhoi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCauhoi
		{
			get
			{
				return this._MaCauhoi;
			}
			set
			{
				if ((this._MaCauhoi != value))
				{
					this.OnMaCauhoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauhoi = value;
					this.SendPropertyChanged("MaCauhoi");
					this.OnMaCauhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCauhoi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenCauhoi
		{
			get
			{
				return this._TenCauhoi;
			}
			set
			{
				if ((this._TenCauhoi != value))
				{
					this.OnTenCauhoiChanging(value);
					this.SendPropertyChanging();
					this._TenCauhoi = value;
					this.SendPropertyChanged("TenCauhoi");
					this.OnTenCauhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matest", DbType="Int")]
		public System.Nullable<int> Matest
		{
			get
			{
				return this._Matest;
			}
			set
			{
				if ((this._Matest != value))
				{
					if (this._Test.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMatestChanging(value);
					this.SendPropertyChanging();
					this._Matest = value;
					this.SendPropertyChanged("Matest");
					this.OnMatestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauA", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CauA
		{
			get
			{
				return this._CauA;
			}
			set
			{
				if ((this._CauA != value))
				{
					this.OnCauAChanging(value);
					this.SendPropertyChanging();
					this._CauA = value;
					this.SendPropertyChanged("CauA");
					this.OnCauAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauB", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CauB
		{
			get
			{
				return this._CauB;
			}
			set
			{
				if ((this._CauB != value))
				{
					this.OnCauBChanging(value);
					this.SendPropertyChanging();
					this._CauB = value;
					this.SendPropertyChanged("CauB");
					this.OnCauBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauC", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CauC
		{
			get
			{
				return this._CauC;
			}
			set
			{
				if ((this._CauC != value))
				{
					this.OnCauCChanging(value);
					this.SendPropertyChanging();
					this._CauC = value;
					this.SendPropertyChanged("CauC");
					this.OnCauCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauD", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CauD
		{
			get
			{
				return this._CauD;
			}
			set
			{
				if ((this._CauD != value))
				{
					this.OnCauDChanging(value);
					this.SendPropertyChanging();
					this._CauD = value;
					this.SendPropertyChanged("CauD");
					this.OnCauDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Traloi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Traloi
		{
			get
			{
				return this._Traloi;
			}
			set
			{
				if ((this._Traloi != value))
				{
					this.OnTraloiChanging(value);
					this.SendPropertyChanging();
					this._Traloi = value;
					this.SendPropertyChanged("Traloi");
					this.OnTraloiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Test_Cauhoi", Storage="_Test", ThisKey="Matest", OtherKey="Matest", IsForeignKey=true)]
		public Test Test
		{
			get
			{
				return this._Test.Entity;
			}
			set
			{
				Test previousValue = this._Test.Entity;
				if (((previousValue != value) 
							|| (this._Test.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Test.Entity = null;
						previousValue.Cauhois.Remove(this);
					}
					this._Test.Entity = value;
					if ((value != null))
					{
						value.Cauhois.Add(this);
						this._Matest = value.Matest;
					}
					else
					{
						this._Matest = default(Nullable<int>);
					}
					this.SendPropertyChanged("Test");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Giangvien")]
	public partial class Giangvien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Magv;
		
		private string _HoTen;
		
		private string _Matkhau;
		
		private string _Email;
		
		private string _Diachigv;
		
		private string _Dienthoaigv;
		
		private System.Nullable<System.DateTime> _Ngaysinh;
		
		private string _MaKhoa;
		
		private EntitySet<BaoCao> _BaoCaos;
		
		private EntityRef<Khoa> _Khoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMagvChanging(string value);
    partial void OnMagvChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnMatkhauChanging(string value);
    partial void OnMatkhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiachigvChanging(string value);
    partial void OnDiachigvChanged();
    partial void OnDienthoaigvChanging(string value);
    partial void OnDienthoaigvChanged();
    partial void OnNgaysinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaysinhChanged();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    #endregion
		
		public Giangvien()
		{
			this._BaoCaos = new EntitySet<BaoCao>(new Action<BaoCao>(this.attach_BaoCaos), new Action<BaoCao>(this.detach_BaoCaos));
			this._Khoa = default(EntityRef<Khoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Magv", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Magv
		{
			get
			{
				return this._Magv;
			}
			set
			{
				if ((this._Magv != value))
				{
					this.OnMagvChanging(value);
					this.SendPropertyChanging();
					this._Magv = value;
					this.SendPropertyChanged("Magv");
					this.OnMagvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matkhau", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Matkhau
		{
			get
			{
				return this._Matkhau;
			}
			set
			{
				if ((this._Matkhau != value))
				{
					this.OnMatkhauChanging(value);
					this.SendPropertyChanging();
					this._Matkhau = value;
					this.SendPropertyChanged("Matkhau");
					this.OnMatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachigv", DbType="NVarChar(200)")]
		public string Diachigv
		{
			get
			{
				return this._Diachigv;
			}
			set
			{
				if ((this._Diachigv != value))
				{
					this.OnDiachigvChanging(value);
					this.SendPropertyChanging();
					this._Diachigv = value;
					this.SendPropertyChanged("Diachigv");
					this.OnDiachigvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dienthoaigv", DbType="VarChar(50)")]
		public string Dienthoaigv
		{
			get
			{
				return this._Dienthoaigv;
			}
			set
			{
				if ((this._Dienthoaigv != value))
				{
					this.OnDienthoaigvChanging(value);
					this.SendPropertyChanging();
					this._Dienthoaigv = value;
					this.SendPropertyChanged("Dienthoaigv");
					this.OnDienthoaigvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaysinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaysinh
		{
			get
			{
				return this._Ngaysinh;
			}
			set
			{
				if ((this._Ngaysinh != value))
				{
					this.OnNgaysinhChanging(value);
					this.SendPropertyChanging();
					this._Ngaysinh = value;
					this.SendPropertyChanged("Ngaysinh");
					this.OnNgaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					if (this._Khoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Giangvien_BaoCao", Storage="_BaoCaos", ThisKey="Magv", OtherKey="Magv")]
		public EntitySet<BaoCao> BaoCaos
		{
			get
			{
				return this._BaoCaos;
			}
			set
			{
				this._BaoCaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_Giangvien", Storage="_Khoa", ThisKey="MaKhoa", OtherKey="MaKhoa", IsForeignKey=true)]
		public Khoa Khoa
		{
			get
			{
				return this._Khoa.Entity;
			}
			set
			{
				Khoa previousValue = this._Khoa.Entity;
				if (((previousValue != value) 
							|| (this._Khoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoa.Entity = null;
						previousValue.Giangviens.Remove(this);
					}
					this._Khoa.Entity = value;
					if ((value != null))
					{
						value.Giangviens.Add(this);
						this._MaKhoa = value.MaKhoa;
					}
					else
					{
						this._MaKhoa = default(string);
					}
					this.SendPropertyChanged("Khoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaoCaos(BaoCao entity)
		{
			this.SendPropertyChanging();
			entity.Giangvien = this;
		}
		
		private void detach_BaoCaos(BaoCao entity)
		{
			this.SendPropertyChanging();
			entity.Giangvien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khoa")]
	public partial class Khoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhoa;
		
		private string _TenKhoa;
		
		private EntitySet<Giangvien> _Giangviens;
		
		private EntitySet<Lop> _Lops;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    partial void OnTenKhoaChanging(string value);
    partial void OnTenKhoaChanged();
    #endregion
		
		public Khoa()
		{
			this._Giangviens = new EntitySet<Giangvien>(new Action<Giangvien>(this.attach_Giangviens), new Action<Giangvien>(this.detach_Giangviens));
			this._Lops = new EntitySet<Lop>(new Action<Lop>(this.attach_Lops), new Action<Lop>(this.detach_Lops));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenKhoa
		{
			get
			{
				return this._TenKhoa;
			}
			set
			{
				if ((this._TenKhoa != value))
				{
					this.OnTenKhoaChanging(value);
					this.SendPropertyChanging();
					this._TenKhoa = value;
					this.SendPropertyChanged("TenKhoa");
					this.OnTenKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_Giangvien", Storage="_Giangviens", ThisKey="MaKhoa", OtherKey="MaKhoa")]
		public EntitySet<Giangvien> Giangviens
		{
			get
			{
				return this._Giangviens;
			}
			set
			{
				this._Giangviens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_Lop", Storage="_Lops", ThisKey="MaKhoa", OtherKey="MaKhoa")]
		public EntitySet<Lop> Lops
		{
			get
			{
				return this._Lops;
			}
			set
			{
				this._Lops.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Giangviens(Giangvien entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = this;
		}
		
		private void detach_Giangviens(Giangvien entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = null;
		}
		
		private void attach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = this;
		}
		
		private void detach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhoaHoc")]
	public partial class KhoaHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Makhoahoc;
		
		private string _Tenkhoahoc;
		
		private string _Nguoidang;
		
		private string _Noidung;
		
		private string _hinhanh;
		
		private System.Nullable<System.DateTime> _Ngaydang;
		
		private string _MaLoai;
		
		private EntitySet<Baihoc> _Baihocs;
		
		private EntitySet<SV_KH> _SV_KHs;
		
		private EntitySet<Test> _Tests;
		
		private EntityRef<Loai> _Loai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMakhoahocChanging(string value);
    partial void OnMakhoahocChanged();
    partial void OnTenkhoahocChanging(string value);
    partial void OnTenkhoahocChanged();
    partial void OnNguoidangChanging(string value);
    partial void OnNguoidangChanged();
    partial void OnNoidungChanging(string value);
    partial void OnNoidungChanged();
    partial void OnhinhanhChanging(string value);
    partial void OnhinhanhChanged();
    partial void OnNgaydangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaydangChanged();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    #endregion
		
		public KhoaHoc()
		{
			this._Baihocs = new EntitySet<Baihoc>(new Action<Baihoc>(this.attach_Baihocs), new Action<Baihoc>(this.detach_Baihocs));
			this._SV_KHs = new EntitySet<SV_KH>(new Action<SV_KH>(this.attach_SV_KHs), new Action<SV_KH>(this.detach_SV_KHs));
			this._Tests = new EntitySet<Test>(new Action<Test>(this.attach_Tests), new Action<Test>(this.detach_Tests));
			this._Loai = default(EntityRef<Loai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Makhoahoc", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Makhoahoc
		{
			get
			{
				return this._Makhoahoc;
			}
			set
			{
				if ((this._Makhoahoc != value))
				{
					this.OnMakhoahocChanging(value);
					this.SendPropertyChanging();
					this._Makhoahoc = value;
					this.SendPropertyChanged("Makhoahoc");
					this.OnMakhoahocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenkhoahoc", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Tenkhoahoc
		{
			get
			{
				return this._Tenkhoahoc;
			}
			set
			{
				if ((this._Tenkhoahoc != value))
				{
					this.OnTenkhoahocChanging(value);
					this.SendPropertyChanging();
					this._Tenkhoahoc = value;
					this.SendPropertyChanged("Tenkhoahoc");
					this.OnTenkhoahocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nguoidang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nguoidang
		{
			get
			{
				return this._Nguoidang;
			}
			set
			{
				if ((this._Nguoidang != value))
				{
					this.OnNguoidangChanging(value);
					this.SendPropertyChanging();
					this._Nguoidang = value;
					this.SendPropertyChanged("Nguoidang");
					this.OnNguoidangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Noidung", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Noidung
		{
			get
			{
				return this._Noidung;
			}
			set
			{
				if ((this._Noidung != value))
				{
					this.OnNoidungChanging(value);
					this.SendPropertyChanging();
					this._Noidung = value;
					this.SendPropertyChanged("Noidung");
					this.OnNoidungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hinhanh", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string hinhanh
		{
			get
			{
				return this._hinhanh;
			}
			set
			{
				if ((this._hinhanh != value))
				{
					this.OnhinhanhChanging(value);
					this.SendPropertyChanging();
					this._hinhanh = value;
					this.SendPropertyChanged("hinhanh");
					this.OnhinhanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaydang", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaydang
		{
			get
			{
				return this._Ngaydang;
			}
			set
			{
				if ((this._Ngaydang != value))
				{
					this.OnNgaydangChanging(value);
					this.SendPropertyChanging();
					this._Ngaydang = value;
					this.SendPropertyChanged("Ngaydang");
					this.OnNgaydangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._Loai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoaHoc_Baihoc", Storage="_Baihocs", ThisKey="Makhoahoc", OtherKey="Makhoahoc")]
		public EntitySet<Baihoc> Baihocs
		{
			get
			{
				return this._Baihocs;
			}
			set
			{
				this._Baihocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoaHoc_SV_KH", Storage="_SV_KHs", ThisKey="Makhoahoc", OtherKey="Makhoahoc")]
		public EntitySet<SV_KH> SV_KHs
		{
			get
			{
				return this._SV_KHs;
			}
			set
			{
				this._SV_KHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoaHoc_Test", Storage="_Tests", ThisKey="Makhoahoc", OtherKey="Makhoahoc")]
		public EntitySet<Test> Tests
		{
			get
			{
				return this._Tests;
			}
			set
			{
				this._Tests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_KhoaHoc", Storage="_Loai", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public Loai Loai
		{
			get
			{
				return this._Loai.Entity;
			}
			set
			{
				Loai previousValue = this._Loai.Entity;
				if (((previousValue != value) 
							|| (this._Loai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loai.Entity = null;
						previousValue.KhoaHocs.Remove(this);
					}
					this._Loai.Entity = value;
					if ((value != null))
					{
						value.KhoaHocs.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(string);
					}
					this.SendPropertyChanged("Loai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Baihocs(Baihoc entity)
		{
			this.SendPropertyChanging();
			entity.KhoaHoc = this;
		}
		
		private void detach_Baihocs(Baihoc entity)
		{
			this.SendPropertyChanging();
			entity.KhoaHoc = null;
		}
		
		private void attach_SV_KHs(SV_KH entity)
		{
			this.SendPropertyChanging();
			entity.KhoaHoc = this;
		}
		
		private void detach_SV_KHs(SV_KH entity)
		{
			this.SendPropertyChanging();
			entity.KhoaHoc = null;
		}
		
		private void attach_Tests(Test entity)
		{
			this.SendPropertyChanging();
			entity.KhoaHoc = this;
		}
		
		private void detach_Tests(Test entity)
		{
			this.SendPropertyChanging();
			entity.KhoaHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loai")]
	public partial class Loai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoai;
		
		private string _TenLoai;
		
		private EntitySet<KhoaHoc> _KhoaHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public Loai()
		{
			this._KhoaHocs = new EntitySet<KhoaHoc>(new Action<KhoaHoc>(this.attach_KhoaHocs), new Action<KhoaHoc>(this.detach_KhoaHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_KhoaHoc", Storage="_KhoaHocs", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<KhoaHoc> KhoaHocs
		{
			get
			{
				return this._KhoaHocs;
			}
			set
			{
				this._KhoaHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhoaHocs(KhoaHoc entity)
		{
			this.SendPropertyChanging();
			entity.Loai = this;
		}
		
		private void detach_KhoaHocs(KhoaHoc entity)
		{
			this.SendPropertyChanging();
			entity.Loai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lop")]
	public partial class Lop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLop;
		
		private string _TenLop;
		
		private string _MaKhoa;
		
		private EntitySet<SinhVien> _SinhViens;
		
		private EntityRef<Khoa> _Khoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    #endregion
		
		public Lop()
		{
			this._SinhViens = new EntitySet<SinhVien>(new Action<SinhVien>(this.attach_SinhViens), new Action<SinhVien>(this.detach_SinhViens));
			this._Khoa = default(EntityRef<Khoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					if (this._Khoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_SinhVien", Storage="_SinhViens", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<SinhVien> SinhViens
		{
			get
			{
				return this._SinhViens;
			}
			set
			{
				this._SinhViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_Lop", Storage="_Khoa", ThisKey="MaKhoa", OtherKey="MaKhoa", IsForeignKey=true)]
		public Khoa Khoa
		{
			get
			{
				return this._Khoa.Entity;
			}
			set
			{
				Khoa previousValue = this._Khoa.Entity;
				if (((previousValue != value) 
							|| (this._Khoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoa.Entity = null;
						previousValue.Lops.Remove(this);
					}
					this._Khoa.Entity = value;
					if ((value != null))
					{
						value.Lops.Add(this);
						this._MaKhoa = value.MaKhoa;
					}
					else
					{
						this._MaKhoa = default(string);
					}
					this.SendPropertyChanged("Khoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.Lop = this;
		}
		
		private void detach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.Lop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mon")]
	public partial class Mon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMon;
		
		private string _TenMon;
		
		private EntitySet<BaoCao> _BaoCaos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnTenMonChanging(string value);
    partial void OnTenMonChanged();
    #endregion
		
		public Mon()
		{
			this._BaoCaos = new EntitySet<BaoCao>(new Action<BaoCao>(this.attach_BaoCaos), new Action<BaoCao>(this.detach_BaoCaos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMon", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenMon
		{
			get
			{
				return this._TenMon;
			}
			set
			{
				if ((this._TenMon != value))
				{
					this.OnTenMonChanging(value);
					this.SendPropertyChanging();
					this._TenMon = value;
					this.SendPropertyChanged("TenMon");
					this.OnTenMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mon_BaoCao", Storage="_BaoCaos", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<BaoCao> BaoCaos
		{
			get
			{
				return this._BaoCaos;
			}
			set
			{
				this._BaoCaos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaoCaos(BaoCao entity)
		{
			this.SendPropertyChanging();
			entity.Mon = this;
		}
		
		private void detach_BaoCaos(BaoCao entity)
		{
			this.SendPropertyChanging();
			entity.Mon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien")]
	public partial class SinhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Masv;
		
		private string _HoTen;
		
		private string _Matkhau;
		
		private string _Email;
		
		private string _Diachisv;
		
		private string _Dienthoaisv;
		
		private System.Nullable<System.DateTime> _Ngaysinh;
		
		private string _MaLop;
		
		private EntitySet<BaoCao> _BaoCaos;
		
		private EntitySet<SV_KH> _SV_KHs;
		
		private EntityRef<Lop> _Lop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMasvChanging(string value);
    partial void OnMasvChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnMatkhauChanging(string value);
    partial void OnMatkhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiachisvChanging(string value);
    partial void OnDiachisvChanged();
    partial void OnDienthoaisvChanging(string value);
    partial void OnDienthoaisvChanged();
    partial void OnNgaysinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaysinhChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    #endregion
		
		public SinhVien()
		{
			this._BaoCaos = new EntitySet<BaoCao>(new Action<BaoCao>(this.attach_BaoCaos), new Action<BaoCao>(this.detach_BaoCaos));
			this._SV_KHs = new EntitySet<SV_KH>(new Action<SV_KH>(this.attach_SV_KHs), new Action<SV_KH>(this.detach_SV_KHs));
			this._Lop = default(EntityRef<Lop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Masv", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Masv
		{
			get
			{
				return this._Masv;
			}
			set
			{
				if ((this._Masv != value))
				{
					this.OnMasvChanging(value);
					this.SendPropertyChanging();
					this._Masv = value;
					this.SendPropertyChanged("Masv");
					this.OnMasvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matkhau", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Matkhau
		{
			get
			{
				return this._Matkhau;
			}
			set
			{
				if ((this._Matkhau != value))
				{
					this.OnMatkhauChanging(value);
					this.SendPropertyChanging();
					this._Matkhau = value;
					this.SendPropertyChanged("Matkhau");
					this.OnMatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachisv", DbType="NVarChar(200)")]
		public string Diachisv
		{
			get
			{
				return this._Diachisv;
			}
			set
			{
				if ((this._Diachisv != value))
				{
					this.OnDiachisvChanging(value);
					this.SendPropertyChanging();
					this._Diachisv = value;
					this.SendPropertyChanged("Diachisv");
					this.OnDiachisvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dienthoaisv", DbType="VarChar(50)")]
		public string Dienthoaisv
		{
			get
			{
				return this._Dienthoaisv;
			}
			set
			{
				if ((this._Dienthoaisv != value))
				{
					this.OnDienthoaisvChanging(value);
					this.SendPropertyChanging();
					this._Dienthoaisv = value;
					this.SendPropertyChanged("Dienthoaisv");
					this.OnDienthoaisvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaysinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaysinh
		{
			get
			{
				return this._Ngaysinh;
			}
			set
			{
				if ((this._Ngaysinh != value))
				{
					this.OnNgaysinhChanging(value);
					this.SendPropertyChanging();
					this._Ngaysinh = value;
					this.SendPropertyChanged("Ngaysinh");
					this.OnNgaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._Lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_BaoCao", Storage="_BaoCaos", ThisKey="Masv", OtherKey="Masv")]
		public EntitySet<BaoCao> BaoCaos
		{
			get
			{
				return this._BaoCaos;
			}
			set
			{
				this._BaoCaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_SV_KH", Storage="_SV_KHs", ThisKey="Masv", OtherKey="Masv")]
		public EntitySet<SV_KH> SV_KHs
		{
			get
			{
				return this._SV_KHs;
			}
			set
			{
				this._SV_KHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_SinhVien", Storage="_Lop", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public Lop Lop
		{
			get
			{
				return this._Lop.Entity;
			}
			set
			{
				Lop previousValue = this._Lop.Entity;
				if (((previousValue != value) 
							|| (this._Lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lop.Entity = null;
						previousValue.SinhViens.Remove(this);
					}
					this._Lop.Entity = value;
					if ((value != null))
					{
						value.SinhViens.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("Lop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaoCaos(BaoCao entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_BaoCaos(BaoCao entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
		
		private void attach_SV_KHs(SV_KH entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_SV_KHs(SV_KH entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SV_KH")]
	public partial class SV_KH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Makhoahoc;
		
		private string _Masv;
		
		private EntityRef<KhoaHoc> _KhoaHoc;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMakhoahocChanging(string value);
    partial void OnMakhoahocChanged();
    partial void OnMasvChanging(string value);
    partial void OnMasvChanged();
    #endregion
		
		public SV_KH()
		{
			this._KhoaHoc = default(EntityRef<KhoaHoc>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Makhoahoc", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Makhoahoc
		{
			get
			{
				return this._Makhoahoc;
			}
			set
			{
				if ((this._Makhoahoc != value))
				{
					if (this._KhoaHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMakhoahocChanging(value);
					this.SendPropertyChanging();
					this._Makhoahoc = value;
					this.SendPropertyChanged("Makhoahoc");
					this.OnMakhoahocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Masv", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Masv
		{
			get
			{
				return this._Masv;
			}
			set
			{
				if ((this._Masv != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasvChanging(value);
					this.SendPropertyChanging();
					this._Masv = value;
					this.SendPropertyChanged("Masv");
					this.OnMasvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoaHoc_SV_KH", Storage="_KhoaHoc", ThisKey="Makhoahoc", OtherKey="Makhoahoc", IsForeignKey=true)]
		public KhoaHoc KhoaHoc
		{
			get
			{
				return this._KhoaHoc.Entity;
			}
			set
			{
				KhoaHoc previousValue = this._KhoaHoc.Entity;
				if (((previousValue != value) 
							|| (this._KhoaHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhoaHoc.Entity = null;
						previousValue.SV_KHs.Remove(this);
					}
					this._KhoaHoc.Entity = value;
					if ((value != null))
					{
						value.SV_KHs.Add(this);
						this._Makhoahoc = value.Makhoahoc;
					}
					else
					{
						this._Makhoahoc = default(string);
					}
					this.SendPropertyChanged("KhoaHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_SV_KH", Storage="_SinhVien", ThisKey="Masv", OtherKey="Masv", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.SV_KHs.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.SV_KHs.Add(this);
						this._Masv = value.Masv;
					}
					else
					{
						this._Masv = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Test")]
	public partial class Test : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Matest;
		
		private string _Tentest;
		
		private string _Makhoahoc;
		
		private EntitySet<Cauhoi> _Cauhois;
		
		private EntityRef<KhoaHoc> _KhoaHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMatestChanging(int value);
    partial void OnMatestChanged();
    partial void OnTentestChanging(string value);
    partial void OnTentestChanged();
    partial void OnMakhoahocChanging(string value);
    partial void OnMakhoahocChanged();
    #endregion
		
		public Test()
		{
			this._Cauhois = new EntitySet<Cauhoi>(new Action<Cauhoi>(this.attach_Cauhois), new Action<Cauhoi>(this.detach_Cauhois));
			this._KhoaHoc = default(EntityRef<KhoaHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matest", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Matest
		{
			get
			{
				return this._Matest;
			}
			set
			{
				if ((this._Matest != value))
				{
					this.OnMatestChanging(value);
					this.SendPropertyChanging();
					this._Matest = value;
					this.SendPropertyChanged("Matest");
					this.OnMatestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tentest", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Tentest
		{
			get
			{
				return this._Tentest;
			}
			set
			{
				if ((this._Tentest != value))
				{
					this.OnTentestChanging(value);
					this.SendPropertyChanging();
					this._Tentest = value;
					this.SendPropertyChanged("Tentest");
					this.OnTentestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Makhoahoc", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Makhoahoc
		{
			get
			{
				return this._Makhoahoc;
			}
			set
			{
				if ((this._Makhoahoc != value))
				{
					if (this._KhoaHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMakhoahocChanging(value);
					this.SendPropertyChanging();
					this._Makhoahoc = value;
					this.SendPropertyChanged("Makhoahoc");
					this.OnMakhoahocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Test_Cauhoi", Storage="_Cauhois", ThisKey="Matest", OtherKey="Matest")]
		public EntitySet<Cauhoi> Cauhois
		{
			get
			{
				return this._Cauhois;
			}
			set
			{
				this._Cauhois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoaHoc_Test", Storage="_KhoaHoc", ThisKey="Makhoahoc", OtherKey="Makhoahoc", IsForeignKey=true)]
		public KhoaHoc KhoaHoc
		{
			get
			{
				return this._KhoaHoc.Entity;
			}
			set
			{
				KhoaHoc previousValue = this._KhoaHoc.Entity;
				if (((previousValue != value) 
							|| (this._KhoaHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhoaHoc.Entity = null;
						previousValue.Tests.Remove(this);
					}
					this._KhoaHoc.Entity = value;
					if ((value != null))
					{
						value.Tests.Add(this);
						this._Makhoahoc = value.Makhoahoc;
					}
					else
					{
						this._Makhoahoc = default(string);
					}
					this.SendPropertyChanged("KhoaHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cauhois(Cauhoi entity)
		{
			this.SendPropertyChanging();
			entity.Test = this;
		}
		
		private void detach_Cauhois(Cauhoi entity)
		{
			this.SendPropertyChanging();
			entity.Test = null;
		}
	}
}
#pragma warning restore 1591
